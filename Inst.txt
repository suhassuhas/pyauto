const CAPTURE_OBJECT  profile_Instantaneous[] =
{
    {8, {0,0, 1,0,0,255},  2,  0,  0, 14, (void far *)cuc_SnapDateNTime_ASN    }, // 14                               //1
    {3, {1,0,31,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Rph Current                      //3
    {3, {1,0,51,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Yph Current                      //5
    {3, {1,0,71,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Bph Current                      //7
    {3, {1,0,32,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Rph Voltage                      //2
    {3, {1,0,52,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Yph Voltage                      //4
    {3, {1,0,72,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Bph Voltage                      //6
    {3, {1,0,33,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Signed PF R Phase                //8
    {3, {1,0,53,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Signed PF Y Phase                //9
    {3, {1,0,73,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Signed PF B Phase                //10
    {3, {1,0,13,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // System PF                        //11
    {3, {1,0,14,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // frequency                        //12
    {3, {1,0, 9,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Apparent Power KVA               //13
    {3, {1,0, 1,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // signed Active Power KW           //14
    {3, {1,0, 3,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // signed Reactive Power

    {1, {0,0,96,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // No Of Power Failures..
    {3, {0,0,94,91,8,255}, 2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Cumulative Power Failure Duration
    {1, {0,0,94,91,0,255}, 2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Cumulative Tamper Count
    {1, {0,0, 0, 1,0,255}, 2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Cumulative MD resets Count
    {1, {0,0,96, 2,0,255}, 2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Cumulative Programming Count
    {3, {0,0, 0, 1,2,255}, 2,  0,  1, 14, (void far *)cuc_SnapDateNTime_ASN },    // Date and Time Of last reset
    {3, {1,0,1, 8,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // kwh                             //16
    {3, {1,0,5, 8,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // kvarh lag
    {3, {1,0,8, 8,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // kvarh lead
    {3, {1,0,9, 8,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Kvah
    {4, {1,0, 1, 6,0,255}, 2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Maximum Demand KW
    {4, {1,0, 1, 6,0,255}, 5,  0,  1,  14, (void far *)cuc_SnapDateNTime_ASN }, // Maximum Demand KW Date & Time
    {4, {1,0, 9, 6,0,255}, 2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // maximum Demand KVA
    {4, {1,0, 9, 6,0,255}, 5,  0,  1,  14, (void far *)cuc_SnapDateNTime_ASN }, // maximum Demand KVA Date & Time
    {3, {1,0, 36,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Rph signed Active Power KW
    {3, {1,0, 56,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Yph signed Active Power KW
    {3, {1,0, 76,7,0,255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // Bph signed Active Power KW
    {3, {1, 0, 128, 7, 38, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Cumulative VF tamper Duration R phase
    {3, {1, 0, 128, 7, 39, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Cumulative VF tamper Duration Y phase
    {3, {1, 0, 128, 7, 40, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Cumulative VF tamper Duration B phase
    {1, {1, 0, 128, 7, 41, 255}, 2,  0,  1,    5, (void far *)cuc_TamperCounts_ASN },    // VF tamper count
    {3, {1, 0, 128, 7, 53, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Cumulative CO tamper Duration R phase
    {3, {1, 0, 128, 7, 54, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Cumulative CO tamper Duration Y phase
    {3, {1, 0, 128, 7, 55, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Cumulative CO tamper Duration B phase
    {1, {1, 0, 128, 7, 45, 255}, 2,  0,  1,    5, (void far *)cuc_TamperCounts_ASN },    // CO tamper count
    {3, {1, 0, 128, 8, 23, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Voltage Unbalance Duration
    {1, {1, 0, 128, 7, 42, 255}, 2,  0,  1,    5, (void far *)cuc_TamperCounts_ASN }, // VU tamper count
    {3, {1, 0, 128, 8, 24, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Current Unbalance Duration
    {1, {1, 0, 128, 7, 47, 255}, 2,  0,  1,    5, (void far *)cuc_TamperCounts_ASN }, // CU tamper count
    {3, {1, 0, 128, 7, 59, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Cumulative CR tamper Duration R phase //!<5HD0U.70> //Invalid Voltage
    {3, {1, 0, 128, 7, 36, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Cumulative CR tamper Duration Y phase
    {3, {1, 0, 128, 7, 37, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Cumulative CR tamper Duration B phase
    {1, {1, 0, 128, 7, 60, 255}, 2,  0,  1,    5, (void far *)cuc_TamperCounts_ASN }, // CR tamper count   //!<5HD0U.70>
    {3, {1, 0, 128, 8, 39, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Low PF Duration
    {1, {1, 0, 128, 7, 52, 255}, 2,  0,  1,    5, (void far *)cuc_TamperCounts_ASN },    // Low PF Count
    {3, {1, 0, 128, 8, 25, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Current Bypass Duration
    {1, {1, 0, 128, 7, 48, 255}, 2,  0,  1,    5, (void far *)cuc_TamperCounts_ASN },    // CB tamper count
    {3, {1, 0, 128, 8, 26, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Neutral Disturbance Duration
    {1, {1, 0, 128, 7, 50, 255}, 2,  0,  1,    5, (void far *)cuc_TamperCounts_ASN },    // ND tamper count
    {3, {1, 0, 128, 8, 27, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Magnetic tamper Duration
    {1, {1, 0, 128, 7, 51, 255}, 2,  0,  1,    5, (void far *)cuc_TamperCounts_ASN }, // Magnetic tamper count
    {3, {1, 0, 128, 8, 28, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Over Volatge Duration
    {1, {1, 0, 128, 7, 43, 255}, 2,  0,  1,    k5, (void far *)cuc_TamperCounts_ASN }, // Over Voltage count
    {3, {1, 0, 128, 8, 29, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Under Voltage Duration
    {1, {1, 0, 128, 7, 44, 255}, 2,  0,  1,   5, (void far *)cuc_TamperCounts_ASN }, // Under Voltage count
    {3, {1, 0, 128, 8, 34, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Over Current Duration
    {1, {1, 0, 128, 7, 49, 255}, 2,  0,  1,   5, (void far *)cuc_TamperCounts_ASN }, // Over current count
    {3, {1, 0, 128, 8, 57, 255}, 2,  0,  1,   5, (void far *)profile_InstantaneousASN }, // Under Current Duration // Wrong phase Duration
    {1, {1, 0, 128, 8, 58, 255}, 2,  0,  1,   5, (void far *)cuc_TamperCounts_ASN }, // Under current count // Wrong phase count
    {3, {1, 0, 128, 7, 68, 255},  2,  0, 1,  5, (void far *)profile_InstantaneousASN }, // Imp kvah High precision
    {3, {1, 0, 128, 7, 65, 255},  2,  0, 1,  5, (void far *)profile_InstantaneousASN }, // Imp kwh High precision
    {3, {1, 0, 128, 7, 66, 255},  2,  0, 1,  5, (void far *)profile_InstantaneousASN }, // Imp kvarh lag	High precision
    {3, {1, 0, 128, 7, 67, 255},  2,  0, 1,  5, (void far *)profile_InstantaneousASN }, // Imp kvarh lead	High precision
    {3, {1, 0, 128, 7, 72, 255},  2,  0, 1,  5, (void far *)profile_InstantaneousASN }, // exp kvah High precision
    {3, {1, 0, 128, 7, 69, 255},  2,  0, 1,  5, (void far *)profile_InstantaneousASN }, // exp kwh High precision
    {3, {1, 0, 128, 7, 70, 255},  2,  0, 1,  5, (void far *)profile_InstantaneousASN }, // exp kvarh lag	High precision
    {3, {1, 0, 128, 7, 71, 255},  2,  0,  1,  5, (void far *)profile_InstantaneousASN }, // exp kvarh lead	High precision
}

typedef unsigned char  KDEFS_BOOL;		/*  KDEFS_FALSE to  KDEFS_TRUE	   */
typedef unsigned char  KDEFS_BYTE;		/*              0 to           255 */
typedef          char  KDEFS_CHAR;		/*           -128 to           127 */
typedef unsigned char  KDEFS_UCHAR;		/*              0 to           255 */
typedef          short KDEFS_SHORT;		/*        -32,768 to        32,767 */
typedef unsigned short KDEFS_USHORT;		/*              0 to        65,535 */
typedef          long  KDEFS_LONG;		/* -2,147,483,648 to 2,147,483,647 */
typedef unsigned long  KDEFS_ULONG;		/*              0 to 4,294,967,295 */
typedef          int   KDEFS_INT;		/*  machine dependant              */
typedef unsigned int   KDEFS_UINT;		/*  machine dependant              */
typedef          float KDEFS_SFLOAT;	/*  -3.4 * 10(38) to +3.4 * 10(38) */
                                        /*     32-bit short floating point */
                                        /*     number -- IEEE Standard 754 */
                                        /*       fraction = UI23[1..23]    */
                                        /*       exponent = UI8 [24..31]   */
                                        /*       sign     = BS1[32]        */
typedef         double KDEFS_DOUBLE;	/* 2.2250738585072014 10(-308) to  */
                                        /*     1.7976931348623158 10(+308) */
                                        /*  64-bit double precision number */
                                        /*     number -- IEEE Standard 754 */
                                        /*       fraction = UI52[1..52]    */
                                        /*       exponent = UI11 [53..63]  */
                                        /*       sign     = BS1[64]        */

const KDEFS_UCHAR profile_InstantaneousASN[]    = {DT_FLOATING_POINT,'\0'};

#define DT_FLOATING_POINT 5

typedef struct CaptureObject
{
    IC_NUM ic;
    OBISCODE obis;
    unsigned char attr_index;
    unsigned char data_index;
    unsigned char tabIndex;
    unsigned char value_size;
    void far* asn1;
    KDEFS_UCHAR asnLen; //!<PROFILE_SPLIT>
}CAPTURE_OBJECT,*pCAPTURE_OBJECT;

typedef unsigned char IC_NUM;

typedef struct ObisCode
{
    unsigned char a;
    unsigned char b;
    unsigned char c;
    unsigned char d;
    unsigned char e;
    unsigned char f;
}OBISCODE;


